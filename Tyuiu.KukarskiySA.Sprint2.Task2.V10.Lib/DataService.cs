using tyuiu.cources.programming.interfaces.Sprint2;

namespace Tyuiu.KukarskiySA.Sprint2.Task2.V10.Lib
{
    public class DataService : ISprint2Task2V10
    {
        // Метод для проверки, находится ли точка в заштрихованной области
        public bool CheckDotInShadedArea(int x, int y)
        {
            // Заштрихованная область представлена как двумерный массив (0 - белая клетка, 1 - заштрихованная область)
            int[,] grid = new int[15, 15]
            {
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 1
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 2
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 3
                { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, // 4
                { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 }, // 5
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 6
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 7
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 8
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 9
                { 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 }, // 10
                { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, // 11
                { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }, // 12
                { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 }, // 13
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 }, // 14
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }  // 15
            };

            // Проверка, что координаты находятся в пределах 1-15
            if (x >= 1 && x <= 15 && y >= 1 && y <= 15)
            {
                // Возвращаем true, если точка находится в заштрихованной области
                return grid[y - 1, x - 1] == 1;
            }

            // Если координаты за пределами допустимых значений, возвращаем false
            return false;
        }
    }
}
